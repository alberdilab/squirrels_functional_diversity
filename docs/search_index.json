[["index.html", "AlberdiLab | Gravesen et al. 2025 Squirrels’ functional diversity Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Gravesen et al. 2025 Squirrels’ functional diversity Emma Gravesen, Claudia Romeo, Antton Alberdi1 2025-02-03 Chapter 1 Introduction This webbook contains all the code used for data analysis in study of gut microbiomes of newts across ponds included in a restoration plan. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/squirrels_functional_diversity.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(rairtable) library(janitor) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) library(UpSetR) library(viridis) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(ANCOMBC) library(lme4) library(nlme) library(pairwiseAdonis) library(emmeans) University of Copenhagen, antton.alberdi@sund.ku.dk↩︎ "],["prepare-data.html", "Chapter 2 Prepare data 2.1 Load gut data 2.2 Create working objects 2.3 Prepare color scheme 2.4 Wrap working objects 2.5 Load skin data 2.6 Create working objects 2.7 Prepare color scheme 2.8 Wrap working objects", " Chapter 2 Prepare data 2.1 Load gut data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_csv2(&quot;data/squirrels_metadata.csv&quot;) %&gt;% arrange(sample) 2.1.2 Genome metadata genome_metadata &lt;- read_csv(&quot;data/squirrels_mag_info.csv&quot;) %&gt;% rename(length=mag_size) %&gt;% arrange(genome) 2.1.3 Sequencing reads read_counts &lt;- read_csv2(&quot;data/squirrels_counts.csv&quot;) %&gt;% rename(genome=1) %&gt;% arrange(match(genome, genome_metadata$genome)) %&gt;% select(c(&quot;genome&quot;,sample_metadata$sample)) genome_coverage &lt;- read_csv2(&quot;data/squirrels_coverage.csv&quot;) %&gt;% rename(genome=1) %&gt;% arrange(match(genome, genome_metadata$genome)) %&gt;% select(c(&quot;genome&quot;,sample_metadata$sample)) 2.1.4 Genome tree genome_tree &lt;- read_tree(&quot;data/squirrels.tree&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names genome_tree &lt;- keep.tip(genome_tree, tip=genome_metadata$genome) # keep only MAG tips 2.1.5 Genome annotations genome_annotations &lt;- read_tsv(&quot;data/genome_annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Filter reads by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.2.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.2.3 Distill annotations into GIFTs genome_gifts &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19), verbosity=F) 2.3 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) altitude_colors&lt;- c(&quot;#429ef5&quot;,&quot;#a8c3f0&quot;,&quot;#f56c42&quot;,&quot;#f29c80&quot;) treatment_colors &lt;- c(&quot;#429ef5&quot;,&quot;#f56042&quot;) 2.4 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, genome_gifts, phylum_colors, altitude_colors, treatment_colors, file = &quot;data/gut/data.Rdata&quot;) 2.5 Load skin data Load the original data files outputted by the bioinformatic pipeline. 2.5.1 Reads read_counts &lt;- read_tsv(&quot;data/skin/DMB0171_counts.tsv.gz&quot;) %&gt;% rename(genome=1) 2.5.2 Sample metadata sample_metadata &lt;- read_csv(&quot;data/sample_metadata.csv&quot;) %&gt;% select(&quot;EHI_number&quot;,&quot;capture_id_flat&quot;,&quot;sample_type&quot;, &quot;sex&quot;, &quot;latitude&quot;, &quot;longitude&quot;,&quot;singlem_fraction&quot;,&quot;reads_post_fastp&quot;,&quot;metagenomic_bases&quot;,&quot;host_bases&quot;, &quot;bases_lost_fastp_percent_flat&quot;) %&gt;% rename(sample=1) %&gt;% filter(sample_type %in% c(&quot;Skin swab: dorsal&quot;, &quot;Skin swab: ventral&quot;)) %&gt;% filter(sample %in% colnames(read_counts)) %&gt;% separate(sample_type, c(&quot;sample_type&quot;, &quot;position&quot;), sep = &quot;:&quot;) %&gt;% mutate(environment = case_when( longitude &lt; -1.5 ~ &quot;low&quot;, longitude &gt; -1.5 ~ &quot;high&quot;, TRUE ~ NA_character_ # Default case if no match ))%&gt;% mutate(river = case_when( latitude == 43.00 ~ &quot;Erlan&quot;, latitude == 43.03 ~ &quot;Harpea&quot;, latitude == 43.16 ~ &quot;Goizueta&quot;, latitude == 43.14 ~ &quot;Leitzaran&quot;, TRUE ~ NA_character_ # Default case if no match ))%&gt;% select(, -sample_type, -latitude, -longitude) # filter(!sample %in% c(&quot;EHI02973&quot;, &quot;EHI02983&quot;, &quot;EHI02978&quot;, &quot;EHI02987&quot;, &quot;EHI02976&quot;, &quot;EHI02988&quot;, ))%&gt;% 2.5.3 Read counts arrange read_counts &lt;- read_counts %&gt;% select(one_of(c(&quot;genome&quot;,sample_metadata$sample))) 2.5.4 Genome taxonomy genome_metadata &lt;- read_tsv(&quot;data/skin/DMB0171_mag_info.tsv.gz&quot;) %&gt;% rename(length=mag_size)%&gt;% semi_join(., read_counts, by = &quot;genome&quot;) %&gt;% arrange(match(genome,read_counts$genome)) 2.5.5 Genome base hits genome_coverage &lt;- read_tsv(&quot;data/skin/DMB0171_coverage.tsv.gz&quot;) %&gt;% rename(genome=1) %&gt;% select(one_of(c(&quot;genome&quot;,sample_metadata$sample)))%&gt;% semi_join(., genome_metadata, by = &quot;genome&quot;)%&gt;% arrange(match(genome, read_counts$genome)) 2.5.6 Genome tree genome_tree &lt;- read_tree(&quot;data/skin/DMB0171.tree&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names genome_tree &lt;- keep.tip(genome_tree, tip=genome_metadata$genome) # keep only MAG tips 2.5.7 Genome annotations Downloading individual annotation files from ERDA using information in Airtable and writing them to a single compressed table takes a while. The following chunk only needs to be run once, to generate the genome_annotations table that is saved in the data directory. Note that the airtable connection requires a personal access token. airtable(&quot;MAGs&quot;, &quot;appWbHBNLE6iAsMRV&quot;) %&gt;% #get base ID from Airtable browser URL read_airtable(., fields = c(&quot;ID&quot;,&quot;mag_name&quot;,&quot;number_genes&quot;,&quot;anno_url&quot;), id_to_col = TRUE) %&gt;% #get 3 columns from MAGs table filter(mag_name %in% paste0(genome_metadata$genome,&quot;.fa&quot;)) %&gt;% #filter by MAG name filter(number_genes &gt; 0) %&gt;% #genes need to exist select(anno_url) %&gt;% #list MAG annotation urls pull() %&gt;% read_tsv() %&gt;% #load all tables rename(gene=1, genome=2, contig=3) %&gt;% #rename first 3 columns write_tsv(file=&quot;data/skin/genome_annotations.tsv.xz&quot;) #write to overall compressed file genome_annotations &lt;- read_tsv(&quot;data/skin/genome_annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) 2.6 Create working objects Transform the original data files into working objects for downstream analyses. 2.6.1 Filter reads by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.6.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) sample_metadata &lt;- sample_metadata %&gt;% filter(sample %in% colnames(genome_counts_filt)) 2.6.3 Distill annotations into GIFTs genome_gifts &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19), verbosity=F) 2.7 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) altitude_colors&lt;- c(&quot;#429ef5&quot;,&quot;#a8c3f0&quot;,&quot;#f56c42&quot;,&quot;#f29c80&quot;) treatment_colors &lt;- c(&quot;#429ef5&quot;,&quot;#f56042&quot;) 2.8 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, genome_gifts, phylum_colors, altitude_colors, treatment_colors, file = &quot;data/skin/data.Rdata&quot;) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
